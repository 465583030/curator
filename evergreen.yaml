functions:
  setup-environment:
    command: shell.exec
    params:
      working_dir: curator
      script: |
        set -o errexit

        mkdir build

        cat <<EOF > build/evergreen-setup-environment.sh
           export GOPATH=`pwd`/build/gopath
           export PATH=$GOPATH/bin:$PATH

           if [ -d /opt/ldwrapper/bin ]; then
              export PATH=/opt/ldwrapper/bin:$PATH
           fi

           if [ -d /opt/openssl/lib64 ]; then
              export LD_LIBRARY_PATH=/opt/openssl/lib64
           fi

           if [ '${search_path}' != '' ]; then
              export PATH=${search_path}:$PATH
           fi

           if [ '${go_root}' != '' ]; then
              export GOROOT=${go_root}
           fi
        EOF


tasks:
  - name: lint
    commands:
      - command: git.get_project
        params:
          directory: curator
      - command: git.apply_patch
        params:
          directory: curator
      - func: setup-environment
      - command: shell.exec
        params:
          working_dir: curator
          script: |
            . ./build/evergreen-setup-environment.sh
            set -o errexit
            set -o verbose

            make lint
  - name: build
    commands:
      - command: git.get_project
        params:
          directory: curator
      - command: git.apply_patch
        params:
          directory: curator
      - func: setup-environment
      - command: shell.exec
        params:
          working_dir: curator
          script: |
            . ./build/evergreen-setup-environment.sh
            set -o errexit
            set -o verbose

            make build
  - name: test
    depends_on:
      - name: build
    commands:
      - command: git.get_project
        params:
          directory: curator
      - command: git.apply_patch
        params:
          directory: curator
      - func: setup-environment
      - command: shell.exec
        params:
          working_dir: curator
          script: |
            . ./build/evergreen-setup-environment.sh
            set -o errexit
            set -o verbose

            make test
      - command: gotest.parse_files
        params:
          files: ["curator/build/test.*.out"]
  - name: coverage
    depends_on:
      - name: test
    commands:
      - command: git.get_project
        params:
          directory: curator
      - command: git.apply_patch
        params:
          directory: curator
      - func: setup-environment
      - command: shell.exec
        params:
          working_dir: curator
          script: |
            . ./build/evergreen-setup-environment.sh
            set -o errexit
            set -o verbose

            make coverage-html
      - command: s3.put
        params:
          aws_key: ${aws_key}
          aws_secret: ${aws_secret}
          local_file: curator/build/coverage.main.html
          remote_file: curator/${task_id}/coverage.main.html
          bucket: mciuploads
          content_type: text/html
          permissions: public-read
          display_name: main-coverage-html
      - command: s3.put
        params:
          aws_key: ${aws_key}
          aws_secret: ${aws_secret}
          local_file: curator/build/coverage.curator.html
          remote_file: curator/${task_id}/coverage.curator.html
          bucket: mciuploads
          content_type: text/html
          permissions: public-read
          display_name: curator-coverage-html
      - command: s3.put
        params:
          aws_key: ${aws_key}
          aws_secret: ${aws_secret}
          local_file: curator/build/coverage.operations.html
          remote_file: curator/${task_id}/coverage.operations.html
          bucket: mciuploads
          content_type: text/html
          permissions: public-read
          display_name: operations-coverage-html


post:
  - command: shell.exec
    params:
      script: |
        rm -rf curator


buildvariants:
  - name: rhel70
    display_name: RHEL 7.0
    expansions:
      go_root: "/opt/go/"
    run_on:
      - rhel70
    tasks:
      - name: build
      - name: test
      - name: coverage
  - name: archlinux
    display_name: Arch Linux (go1.6)
    run_on:
      - archlinux-test
    tasks:
      - name: build
      - name: lint
      - name: test
  - name: rhel62
    display_name: RHEL 6.2
    run_on:
      - rhel62-test
    tasks:
      - name: build
      - name: test
  - name: rhel55
    display_name: RHEL 5.5 (gccgo)
    expansions:
      search_path: "/opt/mongodbtoolchain/v2/bin/"
    run_on:
      - rhel55
    tasks:
      - name: build
      - name: test
  - name: debian81
    display_name: Debian 8.1
    expansions:
      search_path: "/opt/go/bin/"
      go_root: "/opt/go/"
    run_on:
      - debian81-test
    tasks:
      - name: build
      - name: test
  - name: osx
    display_name: OS X 10.10
    expansions:
      go_root: "/usr/local/go/"
      search_path: "/usr/local/go/bin/"
    run_on:
      - osx-1010
    tasks:
      - name: build
      - name: test
