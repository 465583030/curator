functions:
  run-make:
    command: shell.exec
    params:
       working_dir: curator
       script: |
         set -o errexit
         set -o verbose

         # Configure a local go path for this build.
         export GOPATH=`pwd`/build/gopath

         # Run make, called with proper environment variables set,
         # running the target.
         ${build_env} make ${target}
  upload-coverage:
    command: s3.put
    params:
      aws_key: ${aws_key}
      aws_secret: ${aws_secret}
      local_file: curator/build/coverage.${name}.html
      remote_file: curator/${task_id}/${name}-coverage.html
      bucket: mciuploads
      content_type: text/html
      permissions: public-read
      display_name: ${name}-coverage.html


tasks:
  - name: lint
    commands:
      - command: git.get_project
        params:
          directory: curator
      - command: git.apply_patch
        params:
          directory: curator
      - func: run-make
        vars: { target: "${task_name}" }
  - name: build
    commands:
      - command: git.get_project
        params:
          directory: curator
      - command: git.apply_patch
        params:
          directory: curator
      - func: run-make
        vars: { target: "${task_name}" }
  - name: test-main
    depends_on:
      - name: build
    commands:
      - command: git.get_project
        params:
          directory: curator
      - command: git.apply_patch
        params:
          directory: curator
      - func: run-make
        vars: { target: "${task_name}" }
      - command: gotest.parse_files
        params:
          files: ["curator/build/test.*.out"]
  - name: test-operations
    depends_on:
      - name: build
    commands:
      - command: git.get_project
        params:
          directory: curator
      - command: git.apply_patch
        params:
          directory: curator
      - func: run-make
        vars: { target: "${task_name}" }
      - command: gotest.parse_files
        params:
          files: ["curator/build/test.*.out"]
  - name: test-curator
    depends_on:
      - name: build
    commands:
      - command: git.get_project
        params:
          directory: curator
      - command: git.apply_patch
        params:
          directory: curator
      - func: run-make
        vars: { target: "${task_name}" }
      - command: gotest.parse_files
        params:
          files: ["curator/build/test.*.out"]
  - name: coverage
    depends_on:
      - name: build
    commands:
      - command: git.get_project
        params:
          directory: curator
      - command: git.apply_patch
        params:
          directory: curator
      - func: run-make
        vars: { target: "coverage-html"}
      - func: upload-coverage
        vars: { name: "main"}
      - func: upload-coverage
        vars: { name: "operations"}
      - func: upload-coverage
        vars: { name: "curator"}


post:
  - command: shell.exec
    params:
      script: |
        rm -rf curator


variables:
  - &test-tasks
    - name: build
    - name: test-curator
    - name: test-main
    - name: test-operations
  - &dev-tasks
    # dev tasks contains all the test suites plus coverage and
    # linting.
    - name: build
    - name: lint
    - name: test-curator
    - name: test-main
    - name: test-operations
    - name: coverage


buildvariants:
  - name: archlinux
    display_name: Arch Linux (go1.6)
    run_on:
      - archlinux-test
    tasks:
      *dev-tasks
  - name: rhel70
    display_name: RHEL 7.0
    expansions:
      build_env: "PATH=/opt/go:$PATH"
    run_on:
      - rhel70
    tasks:
      *test-tasks
  - name: rhel62
    display_name: RHEL 6.2
    run_on:
      - rhel62-test
    tasks:
      *test-tasks
  - name: rhel55
    display_name: RHEL 5.5 (gccgo)
    expansions:
      build_env: "LD_LIBRARY_PATH=/opt/openssl/lib64 PATH=/opt/mongodbtoolchain/v2/bin:/opt/ldwrapper/bin:$PATH"
    run_on:
      - rhel55
    tasks:
      *test-tasks
  - name: debian81
    display_name: Debian 8.1
    expansions:
      build_env: "PATH=/opt/go/bin:$PATH GOROOT=/opt/go"
    run_on:
      - debian81-test
    tasks:
      *test-tasks
  - name: osx
    display_name: OS X 10.10
    expansions:
      build_env: "PATH=/usr/local/go/bin:$PATH"
    run_on:
      - osx-1010
    tasks:
      *test-tasks
